#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32

#define OLED_RESET     LED_BUILTIN //NodeMCU
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const int df = 0;

static const unsigned char PROGMEM logo[] = {
0xf0, 0x00, 0x0f, 0xc1, 0xf0, 0x00, 0x1f, 0x83, 0xf0, 0x00, 0x3f, 0x07, 0xf0, 0x00, 0x7e, 0x0f, 
0xf0, 0x00, 0xfc, 0x1f, 0xf0, 0x01, 0xf8, 0x3f, 0xf0, 0x03, 0xf0, 0x7f, 0xf0, 0x07, 0xe0, 0xff, 
0xf0, 0x0f, 0xc1, 0xff, 0xf0, 0x1f, 0x83, 0xff, 0xf0, 0x3f, 0x07, 0xef, 0xf0, 0x7e, 0x0f, 0xcf, 
0xf0, 0xfc, 0x1f, 0x8f, 0xf1, 0xfc, 0x3f, 0x0f, 0xf3, 0xfe, 0x7e, 0x0f, 0xf7, 0xff, 0xfc, 0x0f, 
0xff, 0xdf, 0xf8, 0x0f, 0xff, 0x8f, 0xf0, 0x0f, 0xff, 0x07, 0xe0, 0x0f, 0xfe, 0x0f, 0xf0, 0x0f, 
0xfc, 0x1f, 0xf8, 0x0f, 0xf8, 0x3f, 0xfc, 0x0f, 0xf0, 0x7e, 0x7e, 0x0f, 0xe0, 0xfc, 0x3f, 0x0f, 
0xc1, 0xf8, 0x1f, 0x8f, 0x83, 0xf0, 0x0f, 0xcf, 0x07, 0xe0, 0x07, 0xef, 0x0f, 0xc0, 0x03, 0xff, 
0x1f, 0x80, 0x01, 0xff, 0x3f, 0x00, 0x00, 0xff, 0x7e, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x3f
};

void setup() {
  Serial.begin(9600);
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  
  display.clearDisplay();
  display.display();
  
  display.setTextSize(1);
  display.setTextColor(WHITE);
  
  logoImage(logo, 32, 32);
  display.clearDisplay();
  display.display();
}

void loop() {
    render();
}

void logoImage(const uint8_t *bitmap, uint8_t w, uint8_t h) {
  display.clearDisplay();
  display.drawBitmap(
    (display.width()-w)/2,
    (display.height()-h)/2,
    bitmap, w, h, 2);
  display.display();
  delay(2000);
}

void render() {
  display.clearDisplay();

  display.display();
  delay(df);
}
